<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tomo.mapper.MarketTokenInfoMapper">

    <resultMap id="MarketTokenInfoResultMap" type="com.tomo.model.market.MarketTokenInfo">
        <id property="id" column="id"/>
        <result property="chainIndex" column="chain_index"/>
        <result property="address" column="address"/>
        <result property="isNative" column="is_native"/>
        <result property="name" column="name"/>
        <result property="symbol" column="symbol"/>
        <result property="imageUrl" column="image_url"/>
        <result property="decimals" column="decimals"/>
        <result property="social" column="social" typeHandler="com.tomo.mapper.type.JsonTypeHandler"/>
        <result property="totalSupply" column="total_supply"/>
        <result property="riskLevel" column="risk_level"/>
        <result property="forceSafe" column="force_safe"/>
        <result property="updateTime" column="update_time"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, chain_index, address, is_native, name, symbol, image_url, decimals, social::text, total_supply,risk_level, force_safe, update_time, create_time
    </sql>

    <select id="selectMarketTokenInfoById" resultMap="MarketTokenInfoResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM market_token_info
        WHERE id = #{id}
    </select>

    <select id="selectByChainIndexAndAddress" resultMap="MarketTokenInfoResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM market_token_info
        WHERE chain_index = #{chainIndex} and address = #{address}
    </select>
    <select id="queryTokenList" resultMap="MarketTokenInfoResultMap" parameterType="java.util.List">
        SELECT
        <include refid="Base_Column_List"/>
        FROM market_token_info
        WHERE (chain_index, address) IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            (#{item.chainIndex}, #{item.address})
        </foreach>
        UNION
        SELECT
        <include refid="Base_Column_List"/>
        FROM market_token_info
        WHERE chain_index IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item.chainIndex}
        </foreach>
        AND address IS NULL
    </select>

    <insert id="insertMarketTokenInfo" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO market_token_info(chain_index, address, is_native, name, symbol, image_url, decimals,
                                      social, total_supply, risk_level, force_safe, update_time, create_time)
        VALUES (#{chainIndex}, #{address}, #{isNative}, #{name}, #{symbol}, #{imageUrl}, #{decimals},
                #{social}, #{totalSupply}, #{riskLevel}, #{forceSafe}, #{updateTime}, #{createTime})
    </insert>
    <insert id="batchInsert">
        INSERT INTO market_token_info(chain_index, address, is_native, name, symbol, image_url, decimals,
                                      social, total_supply, risk_level, force_safe, update_time, create_time)
        VALUES
        <foreach collection="list" item="item" separator="," >
            (#{item.chainIndex}, #{item.address}, #{item.isNative}, #{item.name}, #{item.symbol}, #{item.imageUrl}, #{item.decimals},
            #{item.social}, #{item.totalSupply}, #{item.riskLevel}, #{item.forceSafe}, #{item.updateTime}, #{item.createTime})
        </foreach>
    </insert>

    <update id="updateMarketTokenInfo">
        UPDATE market_token_info
        SET chain_index = #{chainIndex},
            address     = #{address},
            is_native   = #{isNative},
            name        = #{name},
            symbol      = #{symbol},
            image_url   = #{imageUrl},
            decimals    = #{decimals},
            social      = #{social, typeHandler=com.tomo.mapper.type.JsonTypeHandler}::json,
            total_supply = #{totalSupply},
            risk_level  = #{riskLevel},
            force_safe  = #{forceSafe},
            update_time = #{updateTime},
            create_time = #{createTime}
        WHERE id = #{id}
    </update>

    <delete id="deleteMarketTokenInfo">
        DELETE
        FROM market_token_info
        WHERE id = #{id}
    </delete>

</mapper>