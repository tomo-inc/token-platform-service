<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tomo.mapper.MarketTokenPriceMapper">

    <resultMap id="MarketTokenPriceResultMap" type="com.tomo.model.market.MarketTokenPrice">
        <id property="id" column="id"/>
        <result property="coinId" column="coin_id"/>
        <result property="chainIndex" column="chain_index"/>
        <result property="address" column="address"/>
        <result property="poolAddress" column="pool_address"/>
        <result property="isPoolBaseToken" column="is_pool_base_token"/>
        <result property="liquidityUsd" column="liquidity_usd"/>
        <result property="realPrice" column="real_price"/>
        <result property="volume24h" column="volume24h"/>
        <result property="change24h" column="change24h"/>
        <result property="marketCap" column="market_cap"/>
        <result property="fdvUsd" column="fdv_usd"/>
        <result property="updateTime" column="update_time"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, coin_id,chain_index, address, pool_address, is_pool_base_token, liquidity_usd, real_price, volume24h, change24h, market_cap, fdv_usd, update_time, create_time
    </sql>

    <select id="selectMarketTokenPriceById" resultMap="MarketTokenPriceResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM market_token_price
        WHERE id = #{id}
    </select>

    <select id="selectMarketTokenPrice" resultMap="MarketTokenPriceResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM market_token_price
        WHERE chain_index = #{chainIndex}  and address = #{address}
    </select>

    <select id="queryByCoinIds" resultMap="MarketTokenPriceResultMap" parameterType="list">
        SELECT
        <include refid="Base_Column_List"/>
        FROM market_token_price
        WHERE coin_id IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="getByCoinId" resultMap="MarketTokenPriceResultMap">
        select
        <include refid="Base_Column_List"/>
        from market_token_price where coin_id = #{coinId}
    </select>

    <insert id="insertMarketTokenPrice" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO market_token_price(coin_id, chain_index, address, pool_address, is_pool_base_token, liquidity_usd,
                                       real_price,
                                       volume24h, change24h, market_cap, fdv_usd, update_time, create_time)
        VALUES (#{coinId}, #{chainIndex}, #{address}, #{poolAddress}, #{isPoolBaseToken}, #{liquidityUsd}, #{realPrice},
                #{volume24h}, #{change24h}, #{marketCap}, #{fdvUsd}, #{updateTime}, #{createTime})
    </insert>
    <insert id="batchInsert" parameterType="list">
        INSERT INTO market_token_price (coin_id, chain_index, address, pool_address, is_pool_base_token, liquidity_usd,
        real_price, volume24h, change24h, market_cap, fdv_usd, update_time, create_time)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.coinId}, #{item.chainIndex}, #{item.address}, #{item.poolAddress}, #{item.isPoolBaseToken},
            #{item.liquidityUsd}, #{item.realPrice}, #{item.volume24h}, #{item.change24h}, #{item.marketCap},
            #{item.fdvUsd}, #{item.updateTime}, #{item.createTime})
        </foreach>
    </insert>

    <update id="updateMarketTokenPrice">
        UPDATE market_token_price
        SET coin_id            = #{coinId},
            chain_index        = #{chainIndex},
            address            = #{address},
            pool_address       = #{poolAddress},
            is_pool_base_token = #{isPoolBaseToken},
            liquidity_usd      = #{liquidityUsd},
            real_price         = #{realPrice},
            volume24h          = #{volume24h},
            change24h          = #{change24h},
            market_cap         = #{marketCap},
            fdv_usd            = #{fdvUsd},
            update_time        = #{updateTime},
            create_time        = #{createTime}
        WHERE id = #{id}
    </update>

    <delete id="deleteMarketTokenPrice">
        DELETE
        FROM market_token_price
        WHERE id = #{id}
    </delete>

</mapper>